PointConvSceneFlowPWC(
  (level0): Conv1d(
    (composed_module): Sequential(
      (0): Conv1d(1, 32, kernel_size=(1,), stride=(1,))
      (1): Identity()
      (2): LeakyReLU(negative_slope=0.1, inplace=True)
    )
  )
  (level0_1): Conv1d(
    (composed_module): Sequential(
      (0): Conv1d(32, 32, kernel_size=(1,), stride=(1,))
      (1): Identity()
      (2): LeakyReLU(negative_slope=0.1, inplace=True)
    )
  )
  (cost0): PointConvFlow(
    (mlp_convs): ModuleList(
      (0): Conv2d(131, 32, kernel_size=(1, 1), stride=(1, 1))
      (1): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1))
    )
    (weightnet1): WeightNet(
      (mlp_convs): ModuleList(
        (0): Conv2d(3, 8, kernel_size=(1, 1), stride=(1, 1))
        (1): Conv2d(8, 8, kernel_size=(1, 1), stride=(1, 1))
        (2): Conv2d(8, 32, kernel_size=(1, 1), stride=(1, 1))
      )
      (mlp_bns): ModuleList(
        (0): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (weightnet2): WeightNet(
      (mlp_convs): ModuleList(
        (0): Conv2d(3, 8, kernel_size=(1, 1), stride=(1, 1))
        (1): Conv2d(8, 8, kernel_size=(1, 1), stride=(1, 1))
        (2): Conv2d(8, 32, kernel_size=(1, 1), stride=(1, 1))
      )
      (mlp_bns): ModuleList(
        (0): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (relu): LeakyReLU(negative_slope=0.1, inplace=True)
  )
  (flow0): SceneFlowEstimatorPointConv(
    (pointconv_list): ModuleList(
      (0): PointConv(
        (weightnet): WeightNet(
          (mlp_convs): ModuleList(
            (0): Conv2d(3, 8, kernel_size=(1, 1), stride=(1, 1))
            (1): Conv2d(8, 8, kernel_size=(1, 1), stride=(1, 1))
            (2): Conv2d(8, 16, kernel_size=(1, 1), stride=(1, 1))
          )
          (mlp_bns): ModuleList(
            (0): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (linear): Linear(in_features=2144, out_features=128, bias=True)
        (bn_linear): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): LeakyReLU(negative_slope=0.1, inplace=True)
      )
      (1): PointConv(
        (weightnet): WeightNet(
          (mlp_convs): ModuleList(
            (0): Conv2d(3, 8, kernel_size=(1, 1), stride=(1, 1))
            (1): Conv2d(8, 8, kernel_size=(1, 1), stride=(1, 1))
            (2): Conv2d(8, 16, kernel_size=(1, 1), stride=(1, 1))
          )
          (mlp_bns): ModuleList(
            (0): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (linear): Linear(in_features=2096, out_features=128, bias=True)
        (bn_linear): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): LeakyReLU(negative_slope=0.1, inplace=True)
      )
    )
    (mlp_convs): ModuleList(
      (0): Conv1d(
        (composed_module): Sequential(
          (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
          (1): Identity()
          (2): LeakyReLU(negative_slope=0.1, inplace=True)
        )
      )
      (1): Conv1d(
        (composed_module): Sequential(
          (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
          (1): Identity()
          (2): LeakyReLU(negative_slope=0.1, inplace=True)
        )
      )
    )
    (fc): Conv1d(64, 3, kernel_size=(1,), stride=(1,))
  )
  (level0_2): Conv1d(
    (composed_module): Sequential(
      (0): Conv1d(32, 64, kernel_size=(1,), stride=(1,))
      (1): Identity()
      (2): LeakyReLU(negative_slope=0.1, inplace=True)
    )
  )
  (level1): PointConvD(
    (weightnet): WeightNet(
      (mlp_convs): ModuleList(
        (0): Conv2d(3, 8, kernel_size=(1, 1), stride=(1, 1))
        (1): Conv2d(8, 8, kernel_size=(1, 1), stride=(1, 1))
        (2): Conv2d(8, 16, kernel_size=(1, 1), stride=(1, 1))
      )
      (mlp_bns): ModuleList(
        (0): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (linear): Linear(in_features=1072, out_features=64, bias=True)
    (relu): LeakyReLU(negative_slope=0.1, inplace=True)
  )
  (cost1): PointConvFlow(
    (mlp_convs): ModuleList(
      (0): Conv2d(195, 64, kernel_size=(1, 1), stride=(1, 1))
      (1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
    )
    (weightnet1): WeightNet(
      (mlp_convs): ModuleList(
        (0): Conv2d(3, 8, kernel_size=(1, 1), stride=(1, 1))
        (1): Conv2d(8, 8, kernel_size=(1, 1), stride=(1, 1))
        (2): Conv2d(8, 64, kernel_size=(1, 1), stride=(1, 1))
      )
      (mlp_bns): ModuleList(
        (0): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (weightnet2): WeightNet(
      (mlp_convs): ModuleList(
        (0): Conv2d(3, 8, kernel_size=(1, 1), stride=(1, 1))
        (1): Conv2d(8, 8, kernel_size=(1, 1), stride=(1, 1))
        (2): Conv2d(8, 64, kernel_size=(1, 1), stride=(1, 1))
      )
      (mlp_bns): ModuleList(
        (0): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (relu): LeakyReLU(negative_slope=0.1, inplace=True)
  )
  (flow1): SceneFlowEstimatorPointConv(
    (pointconv_list): ModuleList(
      (0): PointConv(
        (weightnet): WeightNet(
          (mlp_convs): ModuleList(
            (0): Conv2d(3, 8, kernel_size=(1, 1), stride=(1, 1))
            (1): Conv2d(8, 8, kernel_size=(1, 1), stride=(1, 1))
            (2): Conv2d(8, 16, kernel_size=(1, 1), stride=(1, 1))
          )
          (mlp_bns): ModuleList(
            (0): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (linear): Linear(in_features=3168, out_features=128, bias=True)
        (bn_linear): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): LeakyReLU(negative_slope=0.1, inplace=True)
      )
      (1): PointConv(
        (weightnet): WeightNet(
          (mlp_convs): ModuleList(
            (0): Conv2d(3, 8, kernel_size=(1, 1), stride=(1, 1))
            (1): Conv2d(8, 8, kernel_size=(1, 1), stride=(1, 1))
            (2): Conv2d(8, 16, kernel_size=(1, 1), stride=(1, 1))
          )
          (mlp_bns): ModuleList(
            (0): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (linear): Linear(in_features=2096, out_features=128, bias=True)
        (bn_linear): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): LeakyReLU(negative_slope=0.1, inplace=True)
      )
    )
    (mlp_convs): ModuleList(
      (0): Conv1d(
        (composed_module): Sequential(
          (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
          (1): Identity()
          (2): LeakyReLU(negative_slope=0.1, inplace=True)
        )
      )
      (1): Conv1d(
        (composed_module): Sequential(
          (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
          (1): Identity()
          (2): LeakyReLU(negative_slope=0.1, inplace=True)
        )
      )
    )
    (fc): Conv1d(64, 3, kernel_size=(1,), stride=(1,))
  )
  (level1_0): Conv1d(
    (composed_module): Sequential(
      (0): Conv1d(64, 64, kernel_size=(1,), stride=(1,))
      (1): Identity()
      (2): LeakyReLU(negative_slope=0.1, inplace=True)
    )
  )
  (level1_1): Conv1d(
    (composed_module): Sequential(
      (0): Conv1d(64, 128, kernel_size=(1,), stride=(1,))
      (1): Identity()
      (2): LeakyReLU(negative_slope=0.1, inplace=True)
    )
  )
  (level2): PointConvD(
    (weightnet): WeightNet(
      (mlp_convs): ModuleList(
        (0): Conv2d(3, 8, kernel_size=(1, 1), stride=(1, 1))
        (1): Conv2d(8, 8, kernel_size=(1, 1), stride=(1, 1))
        (2): Conv2d(8, 16, kernel_size=(1, 1), stride=(1, 1))
      )
      (mlp_bns): ModuleList(
        (0): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (linear): Linear(in_features=2096, out_features=128, bias=True)
    (relu): LeakyReLU(negative_slope=0.1, inplace=True)
  )
  (cost2): PointConvFlow(
    (mlp_convs): ModuleList(
      (0): Conv2d(387, 128, kernel_size=(1, 1), stride=(1, 1))
      (1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
    )
    (weightnet1): WeightNet(
      (mlp_convs): ModuleList(
        (0): Conv2d(3, 8, kernel_size=(1, 1), stride=(1, 1))
        (1): Conv2d(8, 8, kernel_size=(1, 1), stride=(1, 1))
        (2): Conv2d(8, 128, kernel_size=(1, 1), stride=(1, 1))
      )
      (mlp_bns): ModuleList(
        (0): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (weightnet2): WeightNet(
      (mlp_convs): ModuleList(
        (0): Conv2d(3, 8, kernel_size=(1, 1), stride=(1, 1))
        (1): Conv2d(8, 8, kernel_size=(1, 1), stride=(1, 1))
        (2): Conv2d(8, 128, kernel_size=(1, 1), stride=(1, 1))
      )
      (mlp_bns): ModuleList(
        (0): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (relu): LeakyReLU(negative_slope=0.1, inplace=True)
  )
  (flow2): SceneFlowEstimatorPointConv(
    (pointconv_list): ModuleList(
      (0): PointConv(
        (weightnet): WeightNet(
          (mlp_convs): ModuleList(
            (0): Conv2d(3, 8, kernel_size=(1, 1), stride=(1, 1))
            (1): Conv2d(8, 8, kernel_size=(1, 1), stride=(1, 1))
            (2): Conv2d(8, 16, kernel_size=(1, 1), stride=(1, 1))
          )
          (mlp_bns): ModuleList(
            (0): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (linear): Linear(in_features=5216, out_features=128, bias=True)
        (bn_linear): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): LeakyReLU(negative_slope=0.1, inplace=True)
      )
      (1): PointConv(
        (weightnet): WeightNet(
          (mlp_convs): ModuleList(
            (0): Conv2d(3, 8, kernel_size=(1, 1), stride=(1, 1))
            (1): Conv2d(8, 8, kernel_size=(1, 1), stride=(1, 1))
            (2): Conv2d(8, 16, kernel_size=(1, 1), stride=(1, 1))
          )
          (mlp_bns): ModuleList(
            (0): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (linear): Linear(in_features=2096, out_features=128, bias=True)
        (bn_linear): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): LeakyReLU(negative_slope=0.1, inplace=True)
      )
    )
    (mlp_convs): ModuleList(
      (0): Conv1d(
        (composed_module): Sequential(
          (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
          (1): Identity()
          (2): LeakyReLU(negative_slope=0.1, inplace=True)
        )
      )
      (1): Conv1d(
        (composed_module): Sequential(
          (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
          (1): Identity()
          (2): LeakyReLU(negative_slope=0.1, inplace=True)
        )
      )
    )
    (fc): Conv1d(64, 3, kernel_size=(1,), stride=(1,))
  )
  (level2_0): Conv1d(
    (composed_module): Sequential(
      (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
      (1): Identity()
      (2): LeakyReLU(negative_slope=0.1, inplace=True)
    )
  )
  (level2_1): Conv1d(
    (composed_module): Sequential(
      (0): Conv1d(128, 256, kernel_size=(1,), stride=(1,))
      (1): Identity()
      (2): LeakyReLU(negative_slope=0.1, inplace=True)
    )
  )
  (level3): PointConvD(
    (weightnet): WeightNet(
      (mlp_convs): ModuleList(
        (0): Conv2d(3, 8, kernel_size=(1, 1), stride=(1, 1))
        (1): Conv2d(8, 8, kernel_size=(1, 1), stride=(1, 1))
        (2): Conv2d(8, 16, kernel_size=(1, 1), stride=(1, 1))
      )
      (mlp_bns): ModuleList(
        (0): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (linear): Linear(in_features=4144, out_features=256, bias=True)
    (relu): LeakyReLU(negative_slope=0.1, inplace=True)
  )
  (cost3): PointConvFlow(
    (mlp_convs): ModuleList(
      (0): Conv2d(643, 256, kernel_size=(1, 1), stride=(1, 1))
      (1): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    )
    (weightnet1): WeightNet(
      (mlp_convs): ModuleList(
        (0): Conv2d(3, 8, kernel_size=(1, 1), stride=(1, 1))
        (1): Conv2d(8, 8, kernel_size=(1, 1), stride=(1, 1))
        (2): Conv2d(8, 256, kernel_size=(1, 1), stride=(1, 1))
      )
      (mlp_bns): ModuleList(
        (0): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (weightnet2): WeightNet(
      (mlp_convs): ModuleList(
        (0): Conv2d(3, 8, kernel_size=(1, 1), stride=(1, 1))
        (1): Conv2d(8, 8, kernel_size=(1, 1), stride=(1, 1))
        (2): Conv2d(8, 256, kernel_size=(1, 1), stride=(1, 1))
      )
      (mlp_bns): ModuleList(
        (0): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (relu): LeakyReLU(negative_slope=0.1, inplace=True)
  )
  (flow3): SceneFlowEstimatorPointConv(
    (pointconv_list): ModuleList(
      (0): PointConv(
        (weightnet): WeightNet(
          (mlp_convs): ModuleList(
            (0): Conv2d(3, 8, kernel_size=(1, 1), stride=(1, 1))
            (1): Conv2d(8, 8, kernel_size=(1, 1), stride=(1, 1))
            (2): Conv2d(8, 16, kernel_size=(1, 1), stride=(1, 1))
          )
          (mlp_bns): ModuleList(
            (0): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (linear): Linear(in_features=8240, out_features=128, bias=True)
        (bn_linear): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): LeakyReLU(negative_slope=0.1, inplace=True)
      )
      (1): PointConv(
        (weightnet): WeightNet(
          (mlp_convs): ModuleList(
            (0): Conv2d(3, 8, kernel_size=(1, 1), stride=(1, 1))
            (1): Conv2d(8, 8, kernel_size=(1, 1), stride=(1, 1))
            (2): Conv2d(8, 16, kernel_size=(1, 1), stride=(1, 1))
          )
          (mlp_bns): ModuleList(
            (0): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (linear): Linear(in_features=2096, out_features=128, bias=True)
        (bn_linear): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): LeakyReLU(negative_slope=0.1, inplace=True)
      )
    )
    (mlp_convs): ModuleList(
      (0): Conv1d(
        (composed_module): Sequential(
          (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
          (1): Identity()
          (2): LeakyReLU(negative_slope=0.1, inplace=True)
        )
      )
      (1): Conv1d(
        (composed_module): Sequential(
          (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
          (1): Identity()
          (2): LeakyReLU(negative_slope=0.1, inplace=True)
        )
      )
    )
    (fc): Conv1d(64, 3, kernel_size=(1,), stride=(1,))
  )
  (level3_0): Conv1d(
    (composed_module): Sequential(
      (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,))
      (1): Identity()
      (2): LeakyReLU(negative_slope=0.1, inplace=True)
    )
  )
  (level3_1): Conv1d(
    (composed_module): Sequential(
      (0): Conv1d(256, 512, kernel_size=(1,), stride=(1,))
      (1): Identity()
      (2): LeakyReLU(negative_slope=0.1, inplace=True)
    )
  )
  (level4): PointConvD(
    (weightnet): WeightNet(
      (mlp_convs): ModuleList(
        (0): Conv2d(3, 8, kernel_size=(1, 1), stride=(1, 1))
        (1): Conv2d(8, 8, kernel_size=(1, 1), stride=(1, 1))
        (2): Conv2d(8, 16, kernel_size=(1, 1), stride=(1, 1))
      )
      (mlp_bns): ModuleList(
        (0): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (linear): Linear(in_features=8240, out_features=256, bias=True)
    (relu): LeakyReLU(negative_slope=0.1, inplace=True)
  )
  (deconv4_3): Conv1d(
    (composed_module): Sequential(
      (0): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
      (1): Identity()
      (2): LeakyReLU(negative_slope=0.1, inplace=True)
    )
  )
  (deconv3_2): Conv1d(
    (composed_module): Sequential(
      (0): Conv1d(256, 64, kernel_size=(1,), stride=(1,))
      (1): Identity()
      (2): LeakyReLU(negative_slope=0.1, inplace=True)
    )
  )
  (deconv2_1): Conv1d(
    (composed_module): Sequential(
      (0): Conv1d(128, 32, kernel_size=(1,), stride=(1,))
      (1): Identity()
      (2): LeakyReLU(negative_slope=0.1, inplace=True)
    )
  )
  (deconv1_0): Conv1d(
    (composed_module): Sequential(
      (0): Conv1d(64, 32, kernel_size=(1,), stride=(1,))
      (1): Identity()
      (2): LeakyReLU(negative_slope=0.1, inplace=True)
    )
  )
  (warping): PointWarping2()
  (upsample): UpsampleFlow()
)
Total number of parameters: 7722220
